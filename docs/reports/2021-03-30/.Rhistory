install.packages("ggplot2")
install.packages("papeR")
install.packages("stargazer")
install.packages("gridExtra")
install.packages("xtable")
summary(lm(ODI_FIC_R ~ Age))
summary(lm(ODI_FIC_R ~ Age, df.std))
df.std
df.std
library(stargazer)
library(ggplot2)
library(gridExtra)
library(xtable)
library(papeR)
std.var <- function(values)
{
return ((values - mean(values, na.rm=T)) / sd(values, na.rm=T))
}
inlier.var <- function(values, range=1.5)
{
qnt <- quantile(values, probs=c(.25, .75)); H <- range * IQR(values)
return(values > (qnt[1] - H) & values < (qnt[2] + H))
}
read.table <- function(img.fn)
{
img.df <- read.csv(img.fn)
for(i in 1:ncol(img.df)){
img.df[is.na(img.df[,i]), i] <- mean(img.df[,i], na.rm = TRUE)
}
metrics <- names(img.df)[-1]
df <- img.df
df <- merge(df, read.csv("../meta/unrestricted_behavioral.csv"))
df <- merge(df, read.csv("../meta/restricted.csv"))
df$ICV <- df$FS_IntraCranial_Vol
df$Sex <- df$Gender
df$ThoughtProblems <- df$ASR_Thot_T
df$Cognition <- df$CogTotalComp_AgeAdj
df$Memory <- df$WM_Task_Acc
df$LifeSatisfaction <- df$LifeSatisf_Unadj
df$CannabisDose <- df$SSAGA_Mj_Times_Used
df$PaternalAlcohol <- df$FamHist_Fath_DrgAlc
df$PaternalAlcohol <- as.factor(df$PaternalAlcohol)
#df$DailySmoke <- as.factor(df$Num_Days_Used_Any_Tobacco_7days > 6)
#df$DailyDrink <- as.factor(df$Num_Days_Drank_7days > 6)
df$DailySmoke <- df$Num_Days_Used_Any_Tobacco_7days
df$DailyDrink <- df$Num_Days_Drank_7days
df$Age <- df$Age_in_Yrs
df$HeavyMj <- as.factor(df$CannabisDose > 3)
# CannabisDose = Times used marijuana:
# never used = 0; 1-5 = 1; 6-10 = 2; 11-25 = 3; 26-50 = 3;
# 51-100 = 3; 101-999 = 4; 1000-2000 = 5; >2000 = 5
df$PaternalAlcohol <- as.factor(df$PaternalAlcohol)
levels(df$PaternalAlcohol) <- c("false", "true")
levels(df$Sex) <- c("Female", "Male")
return(df)
}
df.roi.odi    <- read.table("../data/table.roi.diff.allman.noddi.nODI_median.wide.csv")
df.roi.fa     <- read.table("../data/table.roi.diff.allman.fwdti.tFA_median.wide.csv")
df.lhmesh.odi <- read.table("../data/table.mesh.lh.ODI_mean.wide.csv")
df.lhmesh.fa  <- read.table("../data/table.mesh.lh.FA_mean.wide.csv")
df.rhmesh.odi <- read.table("../data/table.mesh.rh.ODI_mean.wide.csv")
df.rhmesh.fa  <- read.table("../data/table.mesh.rh.FA_mean.wide.csv")
df.amy.odi    <- read.table("../data/table.roi.diff.cit.amy.noddi.nODI_mean.wide.csv")
df.amy.fa     <- read.table("../data/table.roi.diff.cit.amy.fwdti.tFA_mean.wide.csv")
varonly <- function(df, from.name, to.name)
{
out.df <- data.frame(subject=df$subject)
out.df[,to.name] <- df[,from.name]
return(out.df)
}
df <- df.roi.odi
df <- merge(df, varonly(df.roi.odi, "fic_right", "ODI_FIC_R"))
df <- merge(df, varonly(df.roi.odi, "fic_left",  "ODI_FIC_L"))
df <- merge(df, varonly(df.roi.fa,  "fic_right", "FA_FIC_R"))
df <- merge(df, varonly(df.roi.fa,  "fic_left",  "FA_FIC_L"))
df <- merge(df, varonly(df.amy.odi, "AMY_BLN_La", "ODI_AMY_BLN_La"))
df <- merge(df, varonly(df.amy.fa,  "AMY_BLN_La", "FA_AMY_BLN_La"))
df <- merge(df, varonly(df.amy.odi, "AMY_ATA_ASTA", "ODI_AMY_ATA_ASTA"))
df <- merge(df, varonly(df.amy.fa,  "AMY_ATA_ASTA", "FA_AMY_ATA_ASTA"))
df <- merge(df, varonly(df.amy.odi, "AMY", "ODI_AMY_EXTRA"))
df <- merge(df, varonly(df.amy.fa,  "AMY", "FA_AMY_EXTRA"))
df <- merge(df, varonly(df.rhmesh.odi, "R_AAIC_ROI", "ODI_AAIC_R"))
df <- merge(df, varonly(df.lhmesh.odi, "L_AAIC_ROI", "ODI_AAIC_L"))
df <- merge(df, varonly(df.rhmesh.fa,  "R_AAIC_ROI", "FA_AAIC_R"))
df <- merge(df, varonly(df.lhmesh.fa,  "L_AAIC_ROI", "FA_AAIC_L"))
df <- merge(df, varonly(df.rhmesh.odi, "R_10r_ROI", "ODI_BA10r_R"))
df <- merge(df, varonly(df.lhmesh.odi, "L_10r_ROI", "ODI_BA10r_L"))
df <- merge(df, varonly(df.rhmesh.fa,  "R_10r_ROI", "FA_BA10r_R"))
df <- merge(df, varonly(df.lhmesh.fa,  "L_10r_ROI", "FA_BA10r_L"))
df <- merge(df, varonly(df.rhmesh.odi, "R_10d_ROI", "ODI_BA10d_R"))
df <- merge(df, varonly(df.lhmesh.odi, "L_10d_ROI", "ODI_BA10d_L"))
df <- merge(df, varonly(df.rhmesh.fa,  "R_10d_ROI", "FA_BA10d_R"))
df <- merge(df, varonly(df.lhmesh.fa,  "L_10d_ROI", "FA_BA10d_L"))
df <- merge(df, varonly(df.rhmesh.odi, "R_p32_ROI", "ODI_BAp32_R"))
df <- merge(df, varonly(df.lhmesh.odi, "L_p32_ROI", "ODI_BAp32_L"))
df <- merge(df, varonly(df.rhmesh.fa,  "R_p32_ROI", "FA_BAp32_R"))
df <- merge(df, varonly(df.lhmesh.fa,  "L_p32_ROI", "FA_BAp32_L"))
df <- merge(df, varonly(df.rhmesh.odi, "R_s32_ROI", "ODI_BAs32_R"))
df <- merge(df, varonly(df.lhmesh.odi, "L_s32_ROI", "ODI_BAs32_L"))
df <- merge(df, varonly(df.rhmesh.fa,  "R_s32_ROI", "FA_BAs32_R"))
df <- merge(df, varonly(df.lhmesh.fa,  "L_s32_ROI", "FA_BAs32_L"))
df <- merge(df, varonly(df.rhmesh.odi, "R_d32_ROI", "ODI_BAd32_R"))
df <- merge(df, varonly(df.lhmesh.odi, "L_d32_ROI", "ODI_BAd32_L"))
df <- merge(df, varonly(df.rhmesh.fa,  "R_d32_ROI", "FA_BAd32_R"))
df <- merge(df, varonly(df.lhmesh.fa,  "L_d32_ROI", "FA_BAd32_L"))
df <- merge(df, varonly(df.rhmesh.odi, "R_a24_ROI", "ODI_BAa24_R"))
df <- merge(df, varonly(df.lhmesh.odi, "L_a24_ROI", "ODI_BAa24_L"))
df <- merge(df, varonly(df.rhmesh.fa,  "R_a24_ROI", "FA_BAa24_R"))
df <- merge(df, varonly(df.lhmesh.fa,  "L_a24_ROI", "FA_BAa24_L"))
df <- merge(df, varonly(df.rhmesh.odi, "R_25_ROI", "ODI_BA25_R"))
df <- merge(df, varonly(df.lhmesh.odi, "L_25_ROI", "ODI_BA25_L"))
df <- merge(df, varonly(df.rhmesh.fa,  "R_25_ROI", "FA_BA25_R"))
df <- merge(df, varonly(df.lhmesh.fa,  "L_25_ROI", "FA_BA25_L"))
df <- merge(df, varonly(df.rhmesh.odi, "R_p24_ROI", "ODI_BAp24_R"))
df <- merge(df, varonly(df.lhmesh.odi, "L_p24_ROI", "ODI_BAp24_L"))
df <- merge(df, varonly(df.rhmesh.fa,  "R_p24_ROI", "FA_BAp24_R"))
df <- merge(df, varonly(df.lhmesh.fa,  "L_p24_ROI", "FA_BAp24_L"))
df <- merge(df, varonly(df.rhmesh.odi, "R_9m_ROI", "ODI_BA9m_R"))
df <- merge(df, varonly(df.lhmesh.odi, "L_9m_ROI", "ODI_BA9m_L"))
df <- merge(df, varonly(df.rhmesh.fa,  "R_9m_ROI", "FA_BA9m_R"))
df <- merge(df, varonly(df.lhmesh.fa,  "L_9m_ROI", "FA_BA9m_L"))
vars <- c("FIC", "AAIC", "BA10r", "BA10d", "BAp32", "BAs32", "BAd32", "BAa24", "BA25", "BAp24", "BA9m")
amys <- c("AMY_BLN_La", "AMY_ATA_ASTA", "AMY_EXTRA")
for (name in vars)
{
for (p in c("ODI", "FA"))
{
left <- df[,sprintf("%s_%s_L", p, name)]
right <- df[,sprintf("%s_%s_R", p, name)]
both <- 0.5 * (left + right)
df[,sprintf("%s_%s", p, name)] <- both
df[,sprintf("%s_%s_inlier", p, name)] <- inlier.var(both)
df[,sprintf("%s_%s_L_inlier", p, name)] <- inlier.var(left)
df[,sprintf("%s_%s_R_inlier", p, name)] <- inlier.var(right)
# remove terrible outliers
df <- df[inlier.var(both, range=5),]
}
}
for (name in amys)
{
for (p in c("ODI", "FA"))
{
values <- df[,sprintf("%s_%s", p, name)]
df[,sprintf("%s_%s_inlier", p, name)] <- inlier.var(values)
# remove terrible outliers
df <- df[inlier.var(values, range=5),]
}
}
df.std <- df
for (name in vars)
{
for (p in c("ODI", "FA"))
{
df.std[,sprintf("%s_%s", p, name)] <- std.var(df[,sprintf("%s_%s", p, name),])
df.std[,sprintf("%s_%s_L", p, name)] <- std.var(df[,sprintf("%s_%s_L", p, name),])
df.std[,sprintf("%s_%s_R", p, name)] <- std.var(df[,sprintf("%s_%s_R", p, name),])
}
}
for (name in amys)
{
for (p in c("ODI", "FA"))
{
df.std[,sprintf("%s_%s", p, name)] <- std.var(df[,sprintf("%s_%s", p, name),])
}
}
df.std$Age <- std.var(df$Age)
df.std$ThoughtProblems <- std.var(df$ThoughtProblems)
df.std$Cognition <- std.var(df$Cognition)
df.std$Memory <- std.var(df$Memory)
df.std$LifeSatisfaction <- std.var(df$LifeSatisfaction)
df.std$ICV <- std.var(df$ICV)
summary(lm(FIC_ODI ~ Age, df.std))
summary(lm(FIC_ODI_R ~ Age, df.std))
summary(lm(ODI_FIC_R ~ Age, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex * LifeSatisfaction, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + Age * LifeSatisfaction, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + ThoughtProblems, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction * ThoughtProblems, df.std))
df.std$LifeSatisfaction
df.std$LISAD <- df$std$LifeSatisfaction < 0
df.std$LISAD <- df.std$LifeSatisfaction < 0
summary(lm(ODI_FIC_R ~ Age + Sex + LISAD, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LISAD * ThoughtProblems, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + ThoughtProblems, df.std))
df.std$TBD <- df.std$ThoughtProblems < 0
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + ThoughtProblems, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + TBD, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + TBD, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + TBD, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction * TBD, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + TBD, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + TBD, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction * SSAGA_Educ, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ, df.std))
summary(lm(LifeSatisfaction ~ Age + Sex + ThoughtProblems + SSAGA_Educ, df.std))
summary(lm(LifeSatisfaction ~ Age + Sex + ThoughtProblems + SSAGA_Educ + SSAGA_Rlshp, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp, df.std))
summary(lm(LifeSatisfaction ~ Age + Sex + ThoughtProblems + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income, df.std))
summary(lm(LifeSatisfaction ~ Age + Sex + ThoughtProblems + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ, df.std))
summary(lm(LifeSatisfaction ~ Age + Sex + ThoughtProblems + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool, df.std))
summary(lm(LifeSatisfaction ~ Age + Sex + ThoughtProblems + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI, df.std))
summary(lm(LifeSatisfaction ~ Age + Sex + ThoughtProblems + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + MMSE_Score, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality, df.std))
summary(lm(LifeSatisfaction ~ Age + Sex + ThoughtProblems + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_BedPtnrRmate, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate, df.std))
names(df.std)
summary(lm(ODI_AMY_BLN_La_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate, df.std))
summary(lm(ODI_AMY_BLN_La ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate, df.std))
summary(lm(ODI_AMY_CEN ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate, df.std))
summary(lm(ODI_AMY_ATA_ASTA ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate, df.std))
summary(lm(ODI_AAIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate, df.std))
summary(lm(ODI_AAIC_L ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate, df.std))
summary(lm(ODI_FIC_L ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate, df.std))
summary(lm(FA_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate, df.std))
summary(lm(LifeSatisfaction ~ Age + Sex + ThoughtProblems + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_BedPtnrRmate, df.std))
summary(lm(LifeSatisfaction ~ Age + Sex + ThoughtProblems + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_BedPtnrRmate + THC, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate + THC, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate + THC + PainInterf_Tscore, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate + PainInterf_Tscore, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate + PainInterf_Tscore + Taste_AgeAdj, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate + PainInterf_Tscore + Taste_AgeAdj + SSAGA_Depressive_Ep, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate + PainInterf_Tscore + Taste_AgeAdj + SSAGA_Depressive_Ep, df.std))
summary(lm(LifeSatisfaction ~ Age + Sex + ThoughtProblems + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_BedPtnrRmate + THC, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_Quality + PSQI_BedPtnrRmate + PainInterf_Tscore + Taste_AgeAdj + SSAGA_Depressive_Ep, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + Ethnicity, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + Ethnicity + Race, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + Ethnicity + Race, df.std))
summary(lm(LifeSatisfaction ~ Age + Sex + ThoughtProblems + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_BedPtnrRmate + THC + Race, df.std))
summary(lm(LifeSatisfaction ~ Age + Sex + ThoughtProblems + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + SSAGA_InSchool + BMI + PSQI_BedPtnrRmate + THC + Ethnicity, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + Ethnicity + Race, df.std))
df.std$Race
hist(df.std$Race)
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + Ethnicity + Race, df.std))
summary(lm(ODI_FIC_R ~ Age + Sex + LifeSatisfaction + SSAGA_Educ + SSAGA_Rlshp + SSAGA_Income + SSAGA_Employ + Ethnicity + NEORAW_38, df.std))
library(scales)
df <- read.csv("diff.tract.bundles.along.dti.map.FA_median.group.sizes.csv")
hist(df)
hist(df)
x <- scan("diff.tract.bundles.along.dti.map.FA_median.group.sizes.csv")
hist(x)
sum(x > 1.6) / length(x)
sum(x > 1.3) / length(x)
sum(x > 1.25) / length(x)
View(df.roi.odi)
View(df.lhmesh.odi)
(summarize(df[,c(vars,"site")], type = "numeric", variables=vars, group="site", quantiles=FALSE)
summarize(df[,c(vars,"site")], type = "numeric", variables=vars, group="site", quantiles=FALSE)
summarize(df[,c(vars,"site")], type = "numeric", variables=vars, group="site", quantiles=FALSE)
# Chunk 1: setup
library(stargazer)
library(ggplot2)
library(gridExtra)
library(xtable)
library(papeR)
library(scales)
library(ggplot2)
df <- read.csv("table.wide.csv")
df$icv <- df$volume_tissue + df$volume_lesion + df$volume_csf
df$site <- as.factor(df$site)
df$timepoint <- as.factor(df$timepoint)
vars <- NULL
vars <- c("volume_tissue", vars)
vars <- c("volume_lesion", vars)
vars <- c("volume_csf", vars)
# Chunk 2: table_subcort
xtable(summarize(df[,c(vars,"site")], type = "numeric", variables=vars, group="site", quantiles=FALSE))
# Chunk 3: plot_icv
my.plot <- ggplot(data=df, aes(x=site, y=icv)) + geom_boxplot(alpha=0.5) + geom_jitter(alpha=0.25, width=0.15)
grid.arrange(my.plot, nrow = 1)
df$site
df
setwd("~/sandbox/span/stage1-update-2021-03-30/report")
# Chunk 1: setup
library(stargazer)
library(ggplot2)
library(gridExtra)
library(xtable)
library(papeR)
library(scales)
library(ggplot2)
df <- read.csv("table.wide.csv")
df$icv <- df$volume_tissue + df$volume_lesion + df$volume_csf
df$site <- as.factor(df$site)
df$timepoint <- as.factor(df$timepoint)
vars <- NULL
vars <- c("volume_tissue", vars)
vars <- c("volume_lesion", vars)
vars <- c("volume_csf", vars)
# Chunk 2: table_subcort
xtable(summarize(df[,c(vars,"site")], type = "numeric", variables=vars, group="site", quantiles=FALSE))
# Chunk 3: plot_icv
my.plot <- ggplot(data=df, aes(x=site, y=icv)) + geom_boxplot(alpha=0.5) + geom_jitter(alpha=0.25, width=0.15)
grid.arrange(my.plot, nrow = 1)
summarize(df[,c(vars,"site")], type = "numeric", variables=vars, group="site", quantiles=FALSE)
library(dplyr)
data <- data.frame(sex = c(rep(1, 1000), rep(2, 1000)),
treatment = rep(c(1, 2), 1000),
response1 = rnorm(2000, 0, 1),
response2 = rnorm(2000, 0, 1))
## reshape2 still does its thing:
library(reshape2)
melted <- melt(data, id.vars=c("sex", "treatment"))
## This part is new:
library(dplyr)
grouped <- group_by(melted, sex, treatment)
summarise(grouped, mean=mean(value), sd=sd(value))
melted
head(melted)
grouped
melted
head(melted)
grouped <- group_by(melted, sex, treatment)
summarise(grouped, mean=mean(value), sd=sd(value))
grouped <- group_by(melted, sex)
summarise(grouped, mean=mean(value), sd=sd(value))
grouped <- group_by(df, site)
summarise(grouped, mean=mean(value), sd=sd(value))
grouped
melted <- melt(df, id.vars=c("timepoint"))
grouped <- group_by(melted, site)
summarise(grouped, mean=mean(value), sd=sd(value))
head(df)
melted <- melt(df, id.vars=c("subject", "date", "site", "timepoint"))
grouped <- group_by(melted, site)
summarise(grouped, mean=mean(value), sd=sd(value))
grouped
melted <- melt(df, id.vars=c("subject", "date", "site", "timepoint"))
grouped <- group_by(melted, site, variable)
summarise(grouped, mean=mean(value), sd=sd(value))
?summarize
help(summarize)
melted <- melt(df, id.vars=c("subject", "date", "site", "timepoint"))
grouped <- group_by(melted, site, variable)
summarise(grouped, mean=mean(value), sd=sd(value), na.rm = TRUE)
melted <- melt(df, id.vars=c("subject", "date", "site", "timepoint"))
grouped <- group_by(melted, site, variable)
summarise_all(grouped, mean=mean(value), sd=sd(value), na.rm = TRUE)
melted <- melt(df, id.vars=c("subject", "date", "site", "timepoint"))
grouped <- group_by(melted, site, variable)
summarise(grouped, mean=mean(value, na.rm=T), sd=sd(value, na.rm=T)
melted <- melt(df, id.vars=c("subject", "date", "site", "timepoint"))
grouped <- group_by(melted, site, variable)
summarise(grouped, mean=mean(value, na.rm=T), sd=sd(value, na.rm=T))
melted <- melt(df, id.vars=c("subject", "date", "site", "timepoint"))
grouped <- group_by(melted, site, variable)
summarise(grouped, num=length(value), mean=mean(value, na.rm=T), sd=sd(value, na.rm=T))
# Chunk 1: setup
library(stargazer)
library(ggplot2)
library(gridExtra)
library(xtable)
library(papeR)
library(scales)
library(ggplot2)
df <- read.csv("table.wide.csv")
df$icv <- df$volume_tissue + df$volume_lesion + df$volume_csf
df$site <- as.factor(df$site)
df$timepoint <- as.factor(df$timepoint)
vars <- NULL
vars <- c("volume_tissue", vars)
vars <- c("volume_lesion", vars)
vars <- c("volume_csf", vars)
# Chunk 2: table_subcort
sub.df <- df[,c("site", "volume_csf", "volume_tissue", "volume_lesion", "icv")]
melted <- melt(sub.df, id.vars=c("site"))
grouped <- group_by(melted, site)
xtable(summarise(grouped, num=length(value), mean=mean(value, na.rm=T), sd=sd(value, na.rm=T)))
# Chunk 3: plot_icv
my.plot <- ggplot(data=df, aes(x=site, y=icv)) + geom_boxplot(alpha=0.5) + geom_jitter(alpha=0.25, width=0.15)
grid.arrange(my.plot, nrow = 1)
summarise(grouped, num=length(value), mean=mean(value, na.rm=T), sd=sd(value, na.rm=T))
sub.df <- df[,c("site", "volume_csf", "volume_tissue", "volume_lesion", "icv")]
melted <- melt(sub.df, id.vars=c("site"))
grouped <- group_by(melted, site)
xtable(summarise(grouped, num=length(value), mean=mean(value, na.rm=T), sd=sd(value, na.rm=T)))
sub.df <- df[,c("site", "volume_csf", "volume_tissue", "volume_lesion", "icv")]
melted <- melt(sub.df, id.vars=c("site"))
grouped <- group_by(melted, site, variable)
xtable(summarise(grouped, num=length(value), mean=mean(value, na.rm=T), sd=sd(value, na.rm=T)))
:w
names(df)
names(df)
melt()
sub.df <- df[,c("
")]
df$midline_shift_ratio
df$midline_shift_index
names(df)
head(melted)
sub.df <- df[,c("site", "adc_qa_snr", "t2_qa_snr")]
melted <- melt(sub.df, id.vars=c("site"))
melted
head(melted)
sub.df <- df[,c("site", "adc_qa_snr", "t2_qa_snr")]
melted <- melt(sub.df, id.vars=c("site"))
my.plot <- ggplot(data=melted, aes(x=site, y=value, fill=variable)) + geom_point(position = position_jitterdodge(), aes(color=timepoint), alpha=0.35) + geom_boxplot(alpha=0.2, outlier.shape=NA) ylim(0, 15)
melted
sub.df <- df[,c("site", "adc_qa_snr", "t2_qa_snr")]
melted <- melt(sub.df, id.vars=c("site"))
my.plot <- ggplot(data=melted, aes(x=site, y=value, fill=variable)) + geom_point(position = position_jitterdodge(), aes(color=variable), alpha=0.35) + geom_boxplot(alpha=0.2, outlier.shape=NA) ylim(0, 15)
head(melted)
ggplot(data=melted, aes(x=site, y=value, fill=variable)) + geom_point(position=position_jitterdodge(), aes(color=variable), alpha=0.35) + geom_boxplot(alpha=0.2, outlier.shape=NA) ylim(0, 15)
ggplot(data=melted, aes(x=site, y=value, fill=variable)) + geom_point(position=position_jitterdodge(), aes(color=variable), alpha=0.35) + geom_boxplot(alpha=0.2, outlier.shape=NA) + ylim(0, 15)
df$timepoint
early.df <- df[df$timepoint=="early", c("subject", "site", "volume_lesion")]
late.df <- df[df$timepoint=="late", c("subject", "midline_shift_index")]
merge(early.df, late.df, field="subject")
head(merge(early.df, late.df, field="subject"))
head(merge(early.df, late.df, field="subject"))
merge(early.df, late.df, field="subject")
